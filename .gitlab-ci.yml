stages:
  # - build
  - test

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  PRE_COMMIT_HOME: "$CI_PROJECT_DIR/.cache/pre-commit"
  RUFF_CACHE_DIR: "$CI_PROJECT_DIR/.cache/ruff_cache"
  MYPY_CACHE_DIR: "$CI_PROJECT_DIR/.cache/mypy_cache"

cache:
  key: $CI_PROJECT_NAME
  paths:
    - .cache/

# build:
#   stage: build
#   image: docker:24
#   variables:
#     BRANCH_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
#   script:
#     - echo $CI_REGISTRY_PASSWORD | docker login --username $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
#     - docker build -t $CI_REGISTRY_IMAGE .
#     - docker tag $CI_REGISTRY_IMAGE $BRANCH_TAG
#     - docker push $BRANCH_TAG
#   rules:
#     - if: $CI_PIPELINE_SOURCE == "push"
#     - changes:
#         - pyproject.toml

test:
  stage: test
  # needs:
  #   - build
  tags:
    - u61
    - docker
  image: python:3.12
  script:
    - pip install .[dev]
    - pytest --cov musiclib --cov-report term --cov-report xml --junitxml report.xml
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  artifacts:
    when: always
    expire_in: 1 week
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
      junit: report.xml

lint:
  stage: test
  # needs:
  #   - build
  tags:
    - u61
    - docker
  image: python:3.12
  script:
    - pip install .[dev]
    - pre-commit run --all-files
